<?xml version="1.0" encoding="UTF-8"?>
<!-- Application context definition for PetClinic on JDBC. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- 自动扫描 mybatis mapper接口 -->
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> -->
	<!-- <property name="basePackage" value="com.eebbk.forum.dao.mapper" /> -->
	<!-- <property name="sqlSessionFactoryBeanName" value="baseSQLSessionFactory" 
		/> -->
	<!-- </bean> -->

	<!-- the path where the swagger.properties file can be found -->
	<!-- <bean id="propertyConfigurer" -->
	<!-- class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> -->
	<!-- <property name="location" value="classpath:swagger.properties" /> -->
	<!-- </bean> -->
	<!-- creates a controller at /api-docs from this uri, which serves swagger's 
		raw documentation in JSON format. -->
	<!-- 自动扫描所有注解 注册为bean (启动注解) -->
	 <context:component-scan base-package="com.mzl">
	  <context:exclude-filter expression="org.springframework.stereotype.Controller"
	   type="annotation" />
	 </context:component-scan>
	 
	 <!-- 异常处理 -->
	 <bean id="exceptionResolver" class="com.mzl.log.ExceptionHandler"/>
	 
	 <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >
	     <property name="defaultEncoding" value="UTF-8" />
	     <property name="maxUploadSize" value="5400000" />
	 </bean>
	    
	 <!-- 扫描数据库配置文件 -->
	 <context:property-placeholder
	  location="classpath:application.properties" />
	 
	  <!-- druid 连接池 mysql -->
	 <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	    <!-- 基本属性 url、user、password -->
	    <property name="url" value="${jdbc.mysql.url}" />
	    <property name="username" value="${jdbc.mysql.username}" />
	    <property name="password" value="${jdbc.mysql.password}" />
	      
	    <!-- 配置初始化大小、最小、最大 -->
	    <property name="initialSize" value="1" />
	    <property name="minIdle" value="1" /> 
	    <property name="maxActive" value="20" />
	 
	    <!-- 配置获取连接等待超时的时间 -->
	    <property name="maxWait" value="60000" />
	 
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />
	 
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	    <property name="minEvictableIdleTimeMillis" value="300000" />
	  
	    <property name="validationQuery" value="SELECT 'x' from dual" />
	    <property name="testWhileIdle" value="true" />
	    <property name="testOnBorrow" value="false" />
	    <property name="testOnReturn" value="false" />
	 
	    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
	    <property name="poolPreparedStatements" value="true" />
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	 
	    <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
	    <property name="filters" value="stat" /> 
	    
	</bean>
	
	 <!-- 注册srping jdbc bean -->
	 <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
	  <property name="dataSource">
	   <ref bean="dataSource" />
	  </property>
	 </bean>
	 
	  <!-- 配置事务管理器 -->
	 <bean id="transactionManager"
	  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	  <property name="dataSource" ref="dataSource" />
	 </bean>
	 <!-- 加载事务管理器 -->
	  <tx:annotation-driven transaction-manager="transactionManager" />
	  
	  
	  <!-- 自定义aop切面 -->
	 <!-- <aop:config>
	 
	  <aop:aspect ref="adviseService"> 
	   <aop:pointcut expression="execution(* com.mzl.service.*.*(..))" id="serviceCut"/>
	   <aop:around pointcut-ref="serviceCut" method="aroundService"/>
	  </aop:aspect>
	  
	  <aop:aspect ref="adviseDao"> 
	   <aop:pointcut expression="execution(* com.mzl.dao.*.*(..))" id="daoCut"/>
	   <aop:around pointcut-ref="daoCut" method="aroundDao"/>
	  </aop:aspect>
	  
	  <aop:aspect ref="sqlExecutionTimeAspect"> 
	   <aop:pointcut expression="execution(* org.springframework.jdbc.core.JdbcTemplate.*.*(..))" id="pointCutJdbcTemplate"/>
	   <aop:around pointcut-ref="pointCutJdbcTemplate" method="logSqlExecutionTime"/>
	  </aop:aspect>
	  
	 </aop:config> -->

</beans>
